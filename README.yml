# Это представление YAML предоставлено по запросу.
# Обратите внимание, что YAML в основном используется для сериализации данных и конфигурации,
# и может не быть идеальным форматом для удобочитаемого файла документации, такого как README, на платформах, подобных GitHub.
# Markdown обычно предпочтительнее из-за его возможностей форматирования текста.

project_name: "Docusaurus CI/CD Deployment: Azure Static Web Apps & Kubernetes"
description: "This repository demonstrates an automated deployment solution for a Docusaurus documentation site using two distinct CI/CD pipelines in Azure. It showcases expertise in cloud deployment workflows leveraging Docusaurus, Docker, Kubernetes (AKS), and GitHub Actions."

sections:
  - title: "📁 Project Structure"
    content: |
      ```
      .
      ├── docker
      │   ├── Dockerfile
      │   └── nginx.conf
      ├── .git
      │   ├── COMMIT_EDITMSG
      │   ├── config
      │   ├── description
      │   ├── HEAD
      │   ├── hooks
      │   ├── index
      │   ├── info
      │   ├── logs
      │   ├── objects
      │   └── refs
      ├── .github
      │   └── workflows
      │       ├── azure-static-webapp.yml
      │       └── docker-k8s-deploy.yml
      ├── k8s
      │   ├── deployment.yml
      │   └── service.yml
      └── my-doc-site
          ├── blog
          ├── build               # Auto-generated after `npm run build`
          ├── docs
          ├── .docusaurus
          ├── docusaurus.config.ts
          ├── .gitignore
          ├── node_modules
          ├── package.json
          ├── package-lock.json
          ├── README.md
          ├── sidebars.ts
          ├── src
          ├── static
          └── tsconfig.json
      ```

  - title: "🚀 Getting Started Locally (for Reviewers)"
    description: "To quickly test and verify the application locally, please ensure you have the following prerequisites installed:"
    subsections:
      - title: "📋 Prerequisites"
        list:
          - "Git — for cloning this repository."
          - "Node.js (LTS recommended) and npm — essential for Docusaurus development and build processes."
          - "Docker Desktop (or Docker Engine) — required for building and running Docker images."
          - "kubectl — Kubernetes CLI tool to interact with clusters."
          - "Minikube — for setting up and managing a local Kubernetes cluster to test the Docker + Kubernetes deployment."
          - "Azure CLI — for authenticating with Azure and managing cloud resources."
      - title: "1. Clone the Repository"
        code: |
          ```
          git clone [https://github.com/Vladyslav0602/docusaurus-cicd-k8s-terraform.git](https://github.com/Vladyslav0602/docusaurus-cicd-k8s-terraform.git)
          cd docusaurus-cicd-k8s-terraform
          ```
        note: "(Authentication details including login and token for Karel Fiala will be shared separately via phone.)"
      - title: "2. Install Docusaurus Dependencies and Build Site"
        code: |
          ```
          cd my-doc-site
          npm install
          npm run build
          cd ..
          ```
        description: "This generates the `build/` directory with static files for deployment."
      - title: "3. Run Docusaurus Locally (Development Server)"
        description: "For quick verification of the site in development mode:"
        code: |
          ```
          cd my-doc-site
          npm run start
          ```
        note: "Open your browser at `http://localhost:3000` to view the site."

  - title: "☁️ Deployment Options"
    description: "This project supports two deployment options, each automated through dedicated GitHub Actions workflows."
    subsections:
      - title: "Deployment Option 1: Azure Static Web App"
        description: "Deploy the Docusaurus site directly to an Azure Static Web App — a cost-effective, scalable static hosting solution."
        details:
          - key: "Live Application URL"
            value: "https://gray-hill-061f67c10.2.azurestaticapps.net/"
          - key: "CI/CD Workflow"
            value: "The `.github/workflows/azure-static-webapp.yml` pipeline automates build and deployment on pushes to the `main` branch."
      - title: "Deployment Option 2: Kubernetes with Docker (Local Minikube Test)"
        description: "Containerize and deploy the Docusaurus site inside a Kubernetes cluster. This can be tested locally using Minikube."
        subsections:
          - title: "Start Minikube Cluster"
            description: "Ensure Docker is running, then start Minikube with Docker driver:"
            code: |
              ```
              minikube start --driver=docker
              ```
          - title: "Apply Kubernetes Manifests"
            description: "From the project root:"
            code: |
              ```
              kubectl apply -f k8s/deployment.yml
              kubectl apply -f k8s/service.yml
              ```
          - title: "Access the Application"
            description: "Open the service in your default browser:"
            code: |
              ```
              minikube service docusaurus-service
              ```
            alternative_access:
              description: "Alternatively, access manually:"
              code_snippets:
                - code: |
                    ```
                    minikube ip
                    # Example output: 192.168.49.2
                    ```
                - code: |
                    ```
                    kubectl get svc docusaurus-service
                    # Check the NodePort, e.g. 30432
                    ```
                - code: |
                    ```
                    # Then open:
                    http://<Minikube_IP>:<NodePort>
                    # e.g., [http://192.168.49.2:30432](http://192.168.49.2:30432)
                    ```
          - title: "🛑 Stop and Delete Minikube Cluster"
            description: "To stop and delete the Minikube cluster when done testing:"
            code: |
              ```
              minikube stop
              minikube delete
              